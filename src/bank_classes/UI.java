package bank_classes;

import java.io.InputStreamReader;


//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : UI.java
//  @ Date : 01/06/2013
//  @ Author : 
//
//
import java.util.Scanner;

import bankexceptions.NotFoundException;

public class UI {
	private static final String PROMPT = "\n=> ";
	private static final String CLEAR_SCREEN = "\000C";
	protected boolean logged_in;
	protected User current_user;
	protected Branch access_branch;
	protected Bank facade;
	
	public UI(Bank bank, Branch branch) {
		// Bank and branch data addition
		this.access_branch = branch;
		this.facade = bank;
	}
	
	public  String get_string(String question){
		// raw input output
		InputStreamReader cin = new InputStreamReader(System.in);
		Scanner in = new Scanner(cin);
		System.out.println(question);
		String input = in.nextLine();
		in.close();
		return input;
	}
	
	public void operation_result(String effects){
		System.out.println(effects);
	}
	
	protected String login(String username, String branch, String password) {
		String msg;
		try{
			current_user = this.facade.get_client(username, branch);
			if(current_user.passwordMatch(password))
			{
				logged_in = true;
				msg = "Login realizado.";
				
			}
			else{
				msg = "Senha incorreta!";
			}
		}catch(NotFoundException excep){
			msg = "Usuário não encontrado!";
		}
		return msg;
	}
	
	protected String logout() {
		logged_in = false;
		disable_operations();
		return "Operação Finalizada";
	}
	
	private void disable_operations() {
		System.out.println(CLEAR_SCREEN);
	}
	
	public boolean isLoggedIn() {
		return logged_in;
	}

	
	private void enable_financial_functions() {
		String answer;
		String menu =  "Escolha uma operação: \n" +
				"1> Impressão saldo \n" +
				"2> Extrato \n" +
				"3> Depósito \n" +
				"4> Saque \n" +
				"5> Transferência \n" +
				"6> Logout de "+ current_user.getUsername();
		do {
			operation_result(menu);
			answer = get_string(PROMPT);
			operation_result(CLEAR_SCREEN);	
		}while(!menuOptionsClient.validOption(answer));
		
		
	}
	
	public void menu(){
		String resposta;
		String username;
		String pass;
		String msg = "Bem vindo ao WAND Bank System. \n" +
			   "Escolha uma operação: \n" +
				"1> Login \n" +
				"2> Sair";
		String loginUser = "Digite o nome de usuário: \n";
		String passwUser = "Digite sua senha: \n";
		
		do {
			
			operation_result(msg);
			resposta = get_string(PROMPT);
			operation_result(CLEAR_SCREEN);
			
		}while(!resposta.equals("1") || !resposta.equals("2"));
		
		if(resposta.equals("1"))
		{
			operation_result(loginUser);
			username = get_string(PROMPT);
			operation_result(passwUser);
			pass = get_string(PROMPT);
			operation_result(CLEAR_SCREEN);
			login(username, this.access_branch.get_code(), pass);
			if (isLoggedIn())
			{
				enable_financial_functions();
			}
		}
	}
	
	public String deposit() {
		return "Not implemented!";
	
	}
	
	public String withdraw(Number ammount, Client holder) {
		return "";
	
	}
	
	public String transfer() {
		return "";
	}
	
	public void get_period_from_user() {
	    //TODO this is not void
	}
	
	public void get_month_from_user() {
		//TODO this is not void
	}
	
	private String transaction_history() {
		return "";
	}
		
	public String transaction_history_to_print() {
		return "";
	}
	
	public String balance(Client holder) {
		return "";
	}
}